(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.i=function(value){return value};__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter})}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module["default"]}:function getModuleExports(){return module};__webpack_require__.d(getter,"a",getter);return getter};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0)})([function(module,exports){if(typeof AFRAME==="undefined"){throw new Error("Component attempted to register before AFRAME was available.")}AFRAME.registerComponent("websocket",{schema:{userType:{type:"string",default:"client"}},multiple:true,init:function(evt){this.deltaT=0;this.attributeList={};this.socket=io.connect("http://localhost");if(this.data.userType=="client"){this.socket.on("updateComponents",attributeList=>{console.log("update",attributeList);for(i in attributeList){var currentAttribute=attributeList[i];if(i!="rotation"&&i!="glmol"&&i!="position"){this.el.setAttribute("glmol",i,currentAttribute)}else{this.el.setAttribute(i,currentAttribute)}}})}},update:function(oldData){console.log("websocket is updating")},remove:function(){},tick:function(t){if(this.data.userType=="controller"){if(t>this.deltaT+1e3){console.log("Time: ",Math.floor(t)+"ms");this.deltaT=t;var needsChange=false;var sendList={};for(i of this.el.attributes){if(i.name!=this.attrName&&i.name!="id"){var currentAttributeProps=this.el.getAttribute(i.name);for(j in currentAttributeProps){this.attributeList[i.name]=this.attributeList[i.name]||{};if(Object.values(this.attributeList).length==0||this.attributeList[i.name][j]!=currentAttributeProps[j]){sendList[i.name]=sendList[i.name]||{};sendList[i.name][j]=currentAttributeProps[j];if(i.name=="rotation"){if(sendList["rotation"].x!=undefined&&sendList["rotation"].y!=undefined){needsChange=true}}else{needsChange=true}}}}}if(needsChange){this.socket.emit("controlComponent",sendList);for(i in sendList){var currentVar=sendList[i];this.attributeList[i]=sendList[i]}}}}},pause:function(){},play:function(){}})}]);
